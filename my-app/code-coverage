pipeline {
    agent any

triggers {
        pollSCM '* * * * *'
    }
    
    
 
tools {
    jdk 'java'
    maven 'Maven'
}
         


    stages {
        stage('Hello') {
            steps {
                echo 'Hello World'
            }
        }
        stage('git'){
            steps {
                git branch: 'main', url: 'https://github.com/devopsclouds/java-jar.git'
            }
        }
        
         stage('sonarqubeanaylsis'){
            
            
            steps {
            withSonarQubeEnv('sonarqube-token') {
            
                sh 'mvn sonar:sonar -Dsonar.projectKey=java-jar'
            
            }
            }
        }
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage('maven'){
            steps {
                sh 'mvn clean package'
            }
        }
    }
}
